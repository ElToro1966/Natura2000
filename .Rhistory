install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases"); dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(),user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
allTables
allTables[1:5]
allTables$affyU133Plus2
allTables[affyU133Plus2]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select * from abbyU133Plus2")
dbGetQuery(hg19,"select * from affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
warnings()
head(affyData)
head(affyData$misMatches)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 an 3")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
query
affyMis <- fetch(query)
affyMis
quantile(affyMis$misMatches)
dbDisconnect(hg19)
quantile(x <- rnorm(1001))
quantile(x <- rnorm(1001))
x
quantile(affyMis$misMatches)
quantile(affyMis$misMatches,probs = seq(0.33,0.66,1))
quantile(affyMis$misMatches,probs = seq(0, 0.33, 0.66, 1))
quantile(affyMis$misMatches,probs = seq(0, 1, 0.33))
quantile(affyMis$misMatches,probs = seq(0.33, 1, 0.33))
quantile(affyMis$misMatches,probs = seq(0.333, 1, 0.333))
quantile(affyMis$misMatches,probs = seq(0.3333, 1, 0.3333))
quantile(x <- rnorm(1001))
source("http://bioconductor.org/biocLite.R")
biocLite("rhd5")
biocLite("rhd5")
setwd("/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/")
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
tryCatch(1, finally = print("Hello"))
test <- tryCatch(1, finally = print("Hello"))
test
e <- simpleError("test error")
e
stop(e)
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
error
e
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
guess_encoding("data-original/2016/SPECIES.csv")
class(guess_encoding("data-original/2016/SPECIES.csv")[1])
toString(guess_encoding("data-original/2016/SPECIES.csv")[1])
toString(guess_encoding("data-original/2016/SPECIES.csv")[1][1])
guess_encoding("data-original/2016/SPECIES.csv")[1][1]
guess_encoding("data-original/2016/SPECIES.csv")[1,1]
toString(guess_encoding("data-original/2016/SPECIES.csv")[1,1])
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
toString(guess_encoding("data-original/2010/species .csv")[1,1])
toString(guess_encoding("data-original/2010/species .csv"))
guess_encoding("data-original/2010/species .csv")
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
data_table_dimensions
data_table_dimensions[1,1,1]
data_table_dimensions[2010,BIOREGION,1]
data_table_dimensions[2010,"BIOREGION",1]
data_table_dimensions[2010,"BIOREGION",1]
data_table_dimensions[2010,"BIOREGION",]
data_table_dimensions["2010","BIOREGION",]
data_table_dimensions[c("2010"),c("BIOREGION"),]
data_table_dimensions[c("2010"),c("BIOREGION"),1]
data_table_dimensions[c("BIOREGION"), c("2010"),1]
data_table_dimensions
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
data_table_dimensions("SPECIES","2016",1:2)
data_table_dimensions("SPECIES","2016",1)
source('/media/eric/Disk2/Git/DataScience/Natura2000/Natura2000/getDimensions.R')
